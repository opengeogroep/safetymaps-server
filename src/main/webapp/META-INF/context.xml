<?xml version="1.0" encoding="UTF-8"?>
<Context antiJARLocking="true" path="/safetymaps-server">
  <!-- For developing on localhost using http://, uncomment this to not set the persistent auth cookie with SameSite=None,
       which is only accepted using https:// -->
  <!--Parameter name="persistentAuthNoSameSite" value="true" override="false"/-->

  <!-- Paste this in tomcat/conf/server.xml with the correct settings. Restart tomcat. This has to be done once.

        <Resource
            name="jdbc/safetymaps-server"
            auth="Container"
            type="javax.sql.DataSource"
            username="<dbuser>"
            password="<dbpassword>"
            driverClassName="org.postgresql.Driver"
            url="jdbc:postgresql://<server>:<port>/<dbname>"
            maxTotal="40"
            validationQuery="select 1"
            timeBetweenEvictionRunsMillis="30000"
            minEvictableIdleTimeMillis="5000"
        />

        Repeat for filesetsync and nlextract-bag databases.
    -->
  <ResourceLink global="jdbc/safetymaps-server" name="jdbc/safetymaps-server" type="javax.sql.DataSource"/>
  <ResourceLink global="jdbc/filesetsync-server" name="jdbc/filesetsync-server" type="javax.sql.DataSource"/>
  <ResourceLink global="jdbc/nlextract-bag" name="jdbc/nlextract-bag" type="javax.sql.DataSource"/>

  <!-- Place javax.mail.jar in Tomcat lib and add this to tomcat/conf/server.xml
    <Resource name="mail/session" auth="Container" type="javax.mail.Session" mail.smtp.host="ip here" />
  -->
  <ResourceLink global="mail/session" name="mail/session" type="javax.mail.Session"/>

  <!-- Security configuration -->
  <!-- use LockOutRealm instead of CombinedRealm to prevent brute-forcing -->
  <Realm className="org.apache.catalina.realm.LockOutRealm">
    <Realm allRolesMode="authOnly" className="org.apache.catalina.realm.DataSourceRealm" dataSourceName="jdbc/safetymaps-server" roleNameCol="role" userCredCol="password" userNameCol="username" userRoleTable="safetymaps.user_roles" userTable="safetymaps.user_">
      <CredentialHandler className="org.apache.catalina.realm.NestedCredentialHandler">
        <!-- When these attributes are changed, also modify them in EditUsersActionBean!
             To generate a password from the commandline, execute:
             apache-tomcat/bin/digest.sh -a PBKDF2WithHmacSHA512 -i 100000 -s 16 -k 256 -h "org.apache.catalina.realm.SecretKeyCredentialHandler" mypassword
        -->
        <CredentialHandler className="org.apache.catalina.realm.SecretKeyCredentialHandler"
                           algorithm="PBKDF2WithHmacSHA512"
                           iterations="100000"
                           keyLength="256"
                           saltLength="16"
        />
        <CredentialHandler className="org.apache.catalina.realm.MessageDigestCredentialHandler"
                           algorithm="SHA-1"
                           iterations="1"
                           saltLength="0"
        />
      </CredentialHandler>
    </Realm>
    <!-- Use JNDIRealm for authenticating against a LDAP server (such as
             Active Directory):
             http://tomcat.apache.org/tomcat-8.0-doc/config/realm.html
             http://tomcat.apache.org/tomcat-8.0-doc/realm-howto.html#JNDIRealm
        -->
    <!--Realm className="org.apache.catalina.realm.JNDIRealm"
            allRolesMode="authOnly"
            connectionURL="ldap://ldap:389"
            connectionName="cn=ServiceUser,ou=Services,o=MyOrg"
            connectionPassword=""
            userBase="o=MyOrg"
            userSubtree="true"
            userSearch="cn={0}"
            commonRole="LDAP"
        /-->
  </Realm>
</Context>
